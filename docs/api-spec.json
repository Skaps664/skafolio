{
  "openapi": "3.0.0",
  "info": {
    "title": "Skafolio API",
    "description": "Digital Business Card Platform API - Fast, secure, and feature-rich endpoints for card management, orders, payments, and analytics.",
    "version": "1.0.0",
    "contact": {
      "name": "Skafolio Support",
      "email": "support@skafolio.com"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000/api",
      "description": "Local development"
    },
    {
      "url": "https://skafolio.vercel.app/api",
      "description": "Production"
    }
  ],
  "tags": [
    {
      "name": "Authentication",
      "description": "User registration, login, and session management"
    },
    {
      "name": "Cards",
      "description": "Digital business card CRUD operations"
    },
    {
      "name": "Orders",
      "description": "NFC card and product orders"
    },
    {
      "name": "Payments",
      "description": "PayFast payment integration"
    },
    {
      "name": "Analytics",
      "description": "Event tracking and analytics"
    },
    {
      "name": "Admin",
      "description": "Admin-only endpoints"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Register new user",
        "description": "Create a new user account with email and password. Sets HttpOnly cookies for authentication.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "password"],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "user@example.com"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 8,
                    "example": "SecurePass123!"
                  },
                  "phone": {
                    "type": "string",
                    "example": "+923001234567"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation error"
          },
          "409": {
            "description": "User already exists"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Login user",
        "description": "Authenticate with email and password. Returns JWT tokens in HttpOnly cookies.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "password"],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials"
          }
        }
      }
    },
    "/auth/me": {
      "get": {
        "tags": ["Authentication"],
        "summary": "Get current user",
        "description": "Retrieve authenticated user profile",
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User profile",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "user": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/cards": {
      "get": {
        "tags": ["Cards"],
        "summary": "List user's cards",
        "description": "Get all cards owned by authenticated user",
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of cards",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "cards": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Card"
                      }
                    },
                    "total": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Cards"],
        "summary": "Create new card",
        "description": "Create a new digital business card",
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCardInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Card created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "card": {
                      "$ref": "#/components/schemas/Card"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cards/{id}": {
      "get": {
        "tags": ["Cards"],
        "summary": "Get card by ID",
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Card details"
          }
        }
      },
      "put": {
        "tags": ["Cards"],
        "summary": "Update card",
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCardInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Card updated"
          }
        }
      },
      "delete": {
        "tags": ["Cards"],
        "summary": "Delete card",
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Card deleted"
          }
        }
      }
    },
    "/cards/{id}/publish": {
      "post": {
        "tags": ["Cards"],
        "summary": "Publish card",
        "description": "Publish card with slug, generate QR code, and create public URL",
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["slug"],
                "properties": {
                  "slug": {
                    "type": "string",
                    "pattern": "^[a-z0-9-]+$",
                    "example": "john-doe-engineer"
                  },
                  "metaTitle": {
                    "type": "string"
                  },
                  "metaDescription": {
                    "type": "string"
                  },
                  "metaImage": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Card published successfully"
          },
          "409": {
            "description": "Slug already taken"
          }
        }
      }
    },
    "/cards/slug-check": {
      "get": {
        "tags": ["Cards"],
        "summary": "Check slug availability",
        "description": "Check if a slug is available for use",
        "parameters": [
          {
            "name": "slug",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "john-doe"
          }
        ],
        "responses": {
          "200": {
            "description": "Slug check result",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "available": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cards/public/{slug}": {
      "get": {
        "tags": ["Cards"],
        "summary": "Get published card (public)",
        "description": "Retrieve published card by slug - no authentication required. Cached for 60s.",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Published card data"
          },
          "404": {
            "description": "Card not found or not published"
          }
        }
      }
    },
    "/orders": {
      "get": {
        "tags": ["Orders"],
        "summary": "List user's orders",
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of orders"
          }
        }
      },
      "post": {
        "tags": ["Orders"],
        "summary": "Create new order",
        "description": "Create order for NFC cards, QR stickers, or subscriptions",
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrderInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Order created successfully"
          }
        }
      }
    },
    "/payfast/create": {
      "post": {
        "tags": ["Payments"],
        "summary": "Create PayFast payment",
        "description": "Generate PayFast payment URL for an order",
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["orderId"],
                "properties": {
                  "orderId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Payment URL generated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "paymentUrl": {
                      "type": "string"
                    },
                    "paymentId": {
                      "type": "string"
                    },
                    "amount": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/payfast/ipn": {
      "post": {
        "tags": ["Payments"],
        "summary": "PayFast IPN webhook",
        "description": "Receives payment notifications from PayFast. Public endpoint with signature validation.",
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "IPN processed successfully"
          }
        }
      }
    },
    "/analytics/event": {
      "post": {
        "tags": ["Analytics"],
        "summary": "Track analytics event",
        "description": "Track view, click, QR scan, or share event. Fire-and-forget from client.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["cardId", "eventType"],
                "properties": {
                  "cardId": {
                    "type": "string"
                  },
                  "eventType": {
                    "type": "string",
                    "enum": ["view", "link_click", "qr_scan", "share"]
                  },
                  "metadata": {
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Event tracked"
          }
        }
      }
    },
    "/analytics/card/{cardId}/summary": {
      "get": {
        "tags": ["Analytics"],
        "summary": "Get card analytics summary",
        "description": "Get aggregated analytics for a card. Cached for 5 minutes.",
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Analytics summary",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "analytics": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "last24h": {
                          "type": "integer"
                        },
                        "last7d": {
                          "type": "integer"
                        },
                        "last30d": {
                          "type": "integer"
                        },
                        "byType": {
                          "type": "object"
                        }
                      }
                    },
                    "cached": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "cookieAuth": {
        "type": "apiKey",
        "in": "cookie",
        "name": "accessToken"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": ["user", "admin"]
          },
          "subscriptionStatus": {
            "type": "string",
            "enum": ["free", "pro", "business"]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "AuthResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        }
      },
      "Card": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "isPublished": {
            "type": "boolean"
          },
          "publicUrl": {
            "type": "string"
          },
          "qrCodeUrl": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CreateCardInput": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "personal": {
                "type": "object"
              },
              "social": {
                "type": "array"
              },
              "links": {
                "type": "array"
              },
              "stats": {
                "type": "object"
              }
            }
          }
        }
      },
      "CreateOrderInput": {
        "type": "object",
        "required": ["productType", "quantity", "paymentMethod", "shippingInfo"],
        "properties": {
          "cardId": {
            "type": "string"
          },
          "productType": {
            "type": "string",
            "enum": ["NFC_CARD", "QR_STICKER", "SUBSCRIPTION", "REMAP"]
          },
          "quantity": {
            "type": "integer",
            "minimum": 1,
            "maximum": 100
          },
          "material": {
            "type": "string",
            "enum": ["plastic", "metal", "wood"]
          },
          "paymentMethod": {
            "type": "string",
            "enum": ["PAYFAST", "COD"]
          },
          "shippingInfo": {
            "type": "object",
            "required": ["name", "email", "phone", "address", "city", "postalCode", "country"],
            "properties": {
              "name": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "phone": {
                "type": "string"
              },
              "address": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "postalCode": {
                "type": "string"
              },
              "country": {
                "type": "string"
              }
            }
          }
        }
      }
    }
  }
}
